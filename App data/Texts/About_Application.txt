======================================================================================================================================
									         M.U.R.A.L
======================================================================================================================================

Welcome to M.U.R.A.L the future of art.

======================================================================================================================================

-Description:

M.U.R.A.L is an application created to help artists gain the credit they deserve and also help those who are passionate about art have a trust on what they see.In the modern time of AI revolution it is difficult to know what is real and what is made by AI. To solve this problem I have generated a fight fire by fire stratergy to help people know what art is made by humans and what is made by AI.The app uses AI to identify if a given image is of art generated by any of the popular generative AI models or by a real artist by using convolutional neural network.

This application was made by Malhar Girgaonkar of CSE-A 3rd year in MREC in year 2024.

======================================================================================================================================

-Technology stack:

Following tehnologies were used in making of this application
    
    -turtle (from turtle import width): Turtle graphics library for simple drawing.

    -CTkMessagebox: Custom module for creating message boxes in the GUI.

    -customtkinter and tkinter: Custom module and standard module for GUI development.

    -Backend: Custom module containing backend functionalities for image processing and predictions.

    -PIL (Image): Python Imaging Library for image processing.

    -time: Standard module for time-related operations.

    -os: Standard module for interacting with the operating system, used for file operations.

    -shutil: Standard module providing file operations.

    -filedialog (from customtkinter import filedialog): Custom module for file dialog in the GUI.

    -tensorflow.keras.models.load_model: Loading pre-trained machine learning models.

    -tensorflow.keras.preprocessing.image: Preprocessing images for machine learning models.

    -numpy: Numerical operations in Python, often used for array operations.

======================================================================================================================================

-Folder structure:

-App data:

    -Default: It contains the default image to display.          	

    -Models: It is the folder where i store my module trained using CNN.

    -Images: This folder is where images are stored when processing.

    -Texts: It has display related large text documents.

-Backend.py: This is the backend utility module that is used in mainpage.

-Mainpage.py: The GUI/frontend of application.

-main.py : A gateway file to start application and create .exe file.
 


======================================================================================================================================

-Working:

This project uses a custom made CNN to classify images as AI or Human.For this it used the keras,tensorflow by google and was trained on Asus gaming laptop with a rtx 3050 gpu.
The CNN architecture is summarised below:

_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 conv2d_81 (Conv2D)          (None, 256, 256, 16)      448       
                                                                 
 max_pooling2d_45 (MaxPooli  (None, 128, 128, 16)      0         
 ng2D)                                                           
                                                                 
 conv2d_82 (Conv2D)          (None, 126, 126, 32)      4640      
                                                                 
 max_pooling2d_46 (MaxPooli  (None, 63, 63, 32)        0         
 ng2D)                                                           
                                                                 
 conv2d_83 (Conv2D)          (None, 61, 61, 64)        18496     
                                                                 
 conv2d_84 (Conv2D)          (None, 59, 59, 64)        36928     
                                                                 
 max_pooling2d_47 (MaxPooli  (None, 29, 29, 64)        0         
 ng2D)                                                           
                                                                 
 conv2d_85 (Conv2D)          (None, 27, 27, 128)       73856     
                                                                 
 conv2d_86 (Conv2D)          (None, 25, 25, 128)       147584    
                                                                 
...
Total params: 3201122 (12.21 MB)
Trainable params: 3201122 (12.21 MB)
Non-trainable params: 0 (0.00 Byte)	

======================================================================================================================================

-Things to know:

This application takes the input image from user and transforms it to a format that is suitable to be used for prediction by the binary classifier model that was made by me.
It is a good practise to clear the image folder in application using the image preview frame's clear image button.This is crucial as this app copies the image to application folder before working with it and if not cleared regularly it can slow down the application due to large ammount of images being stored in application.

======================================================================================================================================

-Steps to use application:

    -Start application
    -Read about application
    -Clear image folder
    -Load image
    -preview image
    -(optional)clear preview
    -start prediction
    -Wait till progress bar completes and the CNN model makes it's prediction for the image
    -Go to read more to get more information on the topic of AI art and Human-made art.
    -Clear image folder
    -Rinse and repeat :)

======================================================================================================================================

-Contact and other details:
    -Email ID: malhargirgaonkar@gmail.com
    -Github Repository: 
